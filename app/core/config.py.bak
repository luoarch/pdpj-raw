"""Configurações da aplicação usando Pydantic Settings."""

from typing import Optional
from pydantic import Field
from pydantic_settings import BaseSettings
from app.core.cache import cache_service


class Settings(BaseSettings):
    """Configurações da aplicação."""
    
    # Configurações do Banco de Dados
    database_url: str = Field(
        default="postgresql+asyncpg://user:password@localhost:5432/pdpj_db",
        description="URL de conexão com o PostgreSQL"
    )
    
    # Configurações do Redis
    redis_url: str = Field(
        default="redis://localhost:6379/0",
        description="URL de conexão com o Redis"
    )
    
    # Configurações da AWS S3
    aws_access_key_id: str = Field(default="", description="AWS Access Key ID")
    aws_secret_access_key: str = Field(default="", description="AWS Secret Access Key")
    aws_region: str = Field(default="us-east-1", description="Região da AWS")
    s3_bucket_name: str = Field(default="pdpj-documents-dev", description="Nome do bucket S3")
    
    # Configurações da API PDPJ
    pdpj_api_base_url: str = Field(
        default="https://api.pdpj.gov.br",
        description="URL base da API PDPJ"
    )
    pdpj_api_token: str = Field(default="", description="Token da API PDPJ")
    
    # Configurações de Segurança
    secret_key: str = Field(default="dev-secret-key-change-in-production", description="Chave secreta para JWT")
    api_key_header: str = Field(default="X-API-Key", description="Header da API Key")
    
    # Configurações de Rate Limiting
    rate_limit_requests: int = Field(default=100, description="Número de requisições por janela")
    rate_limit_window: int = Field(default=60, description="Janela de tempo em segundos")
    
    # Configurações de Cache
    cache_ttl: int = Field(default=3600, description="TTL do cache em segundos")
    
    # Configurações de Log
    log_level: str = Field(default="INFO", description="Nível de log")
    log_file: Optional[str] = Field(default=None, description="Arquivo de log")
    
    # Configurações do Celery
    celery_broker_url: str = Field(
        default="redis://localhost:6379/1",
        description="URL do broker Celery"
    )
    celery_result_backend: str = Field(
        default="redis://localhost:6379/1",
        description="Backend de resultados do Celery"
    )
    
    # Configurações de Desenvolvimento
    debug: bool = Field(default=False, description="Modo debug")
    environment: str = Field(default="production", description="Ambiente de execução")
    
    class Config:
        """Configurações do Pydantic."""
        env_file = ".env"
        env_file_encoding = "utf-8"
        case_sensitive = False


# Instância global das configurações
settings = Settings()
